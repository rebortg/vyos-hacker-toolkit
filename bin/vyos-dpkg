#!/bin/bash


usage() {
  echo "Usage:

  $0 [-v|--vyos vyos-1x-repo]

Options:
	-v, --vyos, the vyos-1x folder to build
	-s, --smoke, the vyatta-cfg-system folder to build
	-c, --cfg, the vyatta-cfg-system folder to build
" >&2
}

# Get configuration

echo $( date ) parsing configuration

wd=$( pwd )
etc="$( cd "$(dirname "$0")"/../etc ; pwd ; cd - > /dev/null 2>/dev/null )"
data="$( cd "$(dirname "$0")"/../data ; pwd ; cd - > /dev/null 2>/dev/null )"
cd $etc; for name in `ls`; do declare config_$name=$( cat $name ); done; cd - > /dev/null 2>/dev/null

ssh_build_user=""
ssh_build_port=""
scp_build_port=""

ssh_router_port=""
ssh_router_user=""
scp_router_port=""

email=$config_email
router_host=$config_router_host
build_host=$config_build_host
build_repo=$config_build_repo
build_folder=$config_build_folder

echo $( date ) parsing command line
# ---------------------------------

option_backdoor=0
option_vyos=""
option_smoke=""
option_vcfg=""
option_tags=""
option_extra="mc vim git"

while [[ "$#" -gt 0 ]]; do case $1 in
	-v|--vyos) option_vyos="$2"; shift;;
	-s|--smoke) option_smoke="$2"; shift;;
	-c|--cfg) option_vcfg="$2"; shift;;
	*) echo "Unknown parameter passed: $1"; usage; exit 1;;
esac; shift; done

# check options

echo $( date ) building commands
# ------------------------------

# variable building

if [ "$config_build_user" != "" ]; then
	ssh_build_user="$config_build_user@"
fi

if [ "$config_build_port" != "" ]; then
	ssh_build_port="-p $config_build_port"
	scp_build_port="-P $config_build_port"
fi

if [ "$config_router_user" != "" ]; then
	ssh_router_user="$config_router_user@"
	scp_router_port="-P $config_router_port"
fi

if [ "$config_router_port" != "" ]; then
	ssh_router_port="-p $config_router_port"
	scp_router_port="-P $config_router_port"
fi

dated="debian-$(date +%F:%T)"

connect_build="ssh $ssh_build_port $ssh_build_user$build_host"
connect_router="ssh $ssh_router_port $ssh_router_user$router_host"
docker_iso="docker run --rm --privileged -v $build_repo:$build_repo -w $build_repo vyos/vyos-build:current"
docker_vyos="docker run --rm --privileged -v $build_repo:$build_repo -w $build_repo/$dated/vyos-1x vyos/vyos-build:current"
docker_smoke="docker run --rm --privileged -v $build_repo:$build_repo -w $build_repo/$dated/vyos-smoketest vyos/vyos-build:current"
docker_vcfg="docker run --rm --privileged -v $build_repo:$build_repo -w $build_repo/$dated/vyatta-cfg-system vyos/vyos-build:current"

if [ "$option_vyos" == "." ]; then
	option_vyos=$(basename $(pwd))
	cd ..
fi

if [ "$option_smoke" == "." ]; then
	option_smoke=$(basename $(pwd))
	cd ..
fi

if [ "$option_vcfg" == "." ]; then
	option_vcfg=$(basename $(pwd))
	cd ..
fi

echo $( date ) checking if the build machine is up
# ------------------------------------------------

varh=$(echo '$HOME')
home=$( $connect_build 'echo $HOME' )
build_repo=`echo $build_repo | sed -e "s:$varh:$home:g"`

up=$( $connect_build 'echo up' 2> /dev/null )
if [ "$up" != "up" ]; then
	echo "could not $connect_build"
	exit
fi

echo $( date ) checking if the router is up
# -----------------------------------------

up=$( $connect_router 'echo up' 2> /dev/null )
if [ "$up" != "up" ]; then
	echo "could not $connect_router"
	exit
fi

echo $( date ) updating vyos-build
# --------------------------------

$connect_build "cd $build_repo; git pull"

echo $( date ) cleaning up repo
# -----------------------------

$connect_build mv $build_repo/debian-* /tmp/ 2> /dev/null
$connect_build mkdir -p $build_repo/$dated/vyos-1x $build_repo/$dated/vyos-smoketest $build_repo/$dated/vyatta-cfg-system $build_repo/$dated/vyatta-op

# enable debugging
$connect_router "touch /tmp/vyos.ifconfig.debug"

if [ "$option_vyos" == "." ]; then
	option_vyos=$(basename $(pwd))
	cd ..
fi

if [ "$option_vyos" != "" ]; then
	echo $( date ) getting vyos-1x version
	# ------------------------------------
	version=`head -1 $option_vyos/debian/changelog | cut -f2 -d\( | cut -f1 -d\)`
	echo $( date ) copying vyos-1x $version
	# -------------------------------------
	tar -zc -C $option_vyos -f - . | $connect_build "cd $build_repo/$dated/vyos-1x; tar zxf -"
	echo $( date ) making vyos-1x
	# -----------------------------
	$connect_build $docker_vyos "dpkg-buildpackage -uc -us -tc -b"

	echo $( date ) copying to router
	# ------------------------------
	$connect_build cat $build_repo/$dated/vyos-1x_${version}_all.deb | $connect_router "cat - > vyos-1x_${version}_all.deb"

	$connect_router "sudo dpkg -i --force-all vyos-1x_${version}_all.deb"
	$connect_router "rm vyos-1x_${version}_all.deb"
fi

if [ "$option_smoke" != "" ]; then
	echo $( date ) getting vyos-smoketest version
	# -------------------------------------------
	version=`head -1 $option_smoke/debian/changelog | cut -f2 -d\( | cut -f1 -d\)`
	echo $( date ) copying vyos-smoketest $version
	# -----------------------------
	tar -zc -C $option_smoke -f - . | $connect_build "cd $build_repo/$dated/vyos-smoketest; tar zxf -"
	echo $( date ) making vyos-smoketest
	# -----------------------------
	$connect_build $docker_smoke "dpkg-buildpackage -uc -us -tc -b"

	echo $( date ) copying to router
	# ------------------------------
	$connect_build cat $build_repo/$dated/vyos-smoketest_${version}_all.deb | $connect_router "cat - > vyos-smoketest_${version}_all.deb"

	$connect_router "sudo dpkg -i --force-all vyos-smoketest_${version}_all.deb"
	$connect_router "rm vyos-smoketest_${version}_all.deb"
fi

echo $( date ) complete
