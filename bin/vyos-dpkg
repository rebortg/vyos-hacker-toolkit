#!/bin/bash

if [ $# -eq 0 ]
then
	echo "Usage:"
	echo "$0 followed by the name of the repo to build (ie: T31)"
	exit
fi

# Get configuration

etc="$(cd "$(dirname "$0")"/../etc ; pwd)"
data="$(cd "$(dirname "$0")"/../data ; pwd)"
cd $etc; for name in `ls`; do declare config_$name=$( cat $name ); done; cd - > /dev/null

local_folder=$( echo $config_local_folder | sed -e "s,\$HOME,$HOME," )

ssh_build_port=""
ssh_build_user=""
ssh_router_port=""
ssh_router_user=""

build_host=$config_build_host
router_host=$config_router_host
build_folder=$config_build_folder

if [ "$config_build_user" != "" ]; then
	ssh_build_user="$config_build_user@"
fi

if [ "$config_build_port" != "" ]; then
	ssh_build_port="-p $config_build_port"
fi

if [ "$config_router_user" != "" ]; then
	ssh_router_user="$config_router_user@"
fi

if [ "$config_router_port" != "" ]; then
	ssh_router_port="-p $config_router_port"
fi

connect_build="ssh $ssh_build_port $ssh_build_user$build_host"
connect_router="ssh $ssh_router_port $ssh_router_user$router_host"

# Check if remote router is up

up=$( $connect_build 'echo up' 2> /dev/null )
if [ "$up" != "up" ]; then
	echo "could not ssh $ssh_build_port $ssh_build_user$build_host"
	exit
fi

up=$( $connect_router 'echo up' 2> /dev/null )
if [ "$up" != "up" ]; then
	echo "could not ssh $ssh_router_port $ssh_router_user$router_host"
	exit
fi

echo $( date ) building

cd $local_folder/ 2> /dev/null

docker="docker run --rm --privileged -v $build_folder:$build_folder -w $build_folder/$1 vyos-builder"
command="dpkg-buildpackage -uc -us -tc -b"

$connect_build $docker /bin/sh -c $command

echo $( date ) deploying

# enable debugging
$connect_router "touch /tmp/vyos.ifconfig.debug"

# copying
cd $local_folder; cat vyos-1x_1.3.0-16_all.deb | $connect_router "cat - > vyos-1x_1.3.0-16_all.deb"
$connect_router "sudo dpkg -i --force-all vyos-1x_1.3.0-16_all.deb"
$connect_router "rm vyos-1x_1.3.0-16_all.deb"

now=$( date )
echo $( date ) complete
