#!/bin/bash


usage() {
  echo "Usage:

  $0 [-b|--backdoor] [-f|--folder vyos-1x-repo]

Options:
	-b, --backdoor, install a user admin with password admin
	-f, --folder, the vyos-1x folder to build
	-e, --extra, debian packages to add to the build 
	-t, --tags, tags to add to the build version
" >&2
}

# Get configuration

echo $( date ) parsing configuration

wd=$( pwd )
etc="$( cd "$(dirname "$0")"/../etc ; pwd ; cd - > /dev/null 2>/dev/null )"
data="$( cd "$(dirname "$0")"/../data ; pwd ; cd - > /dev/null 2>/dev/null )"
cd $etc; for name in `ls`; do declare config_$name=$( cat $name ); done; cd - > /dev/null 2>/dev/null

ssh_build_user=""
ssh_build_port=""
scp_build_port=""

email=$config_email
build_host=$config_build_host
build_port=$config_build_port
build_repo=$config_build_repo
build_folder=$config_build_folder

echo $( date ) parsing command line
# ---------------------------------

option_backdoor=0
option_folder=""
option_tags=""
option_extra="mc vim git"

while [[ "$#" -gt 0 ]]; do case $1 in
	-b|--backdoor) option_backdoor=1;;
	-f|--folder) option_folder="$2"; shift;;
	-e|--extra) option_extra="$2"; shift;;
	-t|--tags) option_tags="$2"; shift;;
	*) echo "Unknown parameter passed: $1"; usage; exit 1;;
esac; shift; done

# check options

if [ "$option_folder" == "" ]; then
	echo "missing vyos-1x repository"
	usage
	exit
fi

echo $( date ) building commands
# ------------------------------

# variable building

if [ "$config_build_user" != "" ]; then
	ssh_build_user="$config_build_user@"
fi

if [ "$config_build_port" != "" ]; then
	ssh_build_port="-p $config_build_port"
	scp_build_port="-P $config_build_port"
fi

connect_build="ssh $ssh_build_port $ssh_build_user$build_host"
docker_iso="docker run --rm --privileged -v $build_repo:$build_repo -w $build_repo vyos/vyos-build:current"
docker_dpkg="docker run --rm --privileged -v $build_repo:$build_repo -w $build_repo/packages/vyos-1x vyos/vyos-build:current"

varh=$(echo '$HOME')
home=$( $connect_build 'echo $HOME' )
build_repo=`echo $build_repo | sed -e "s:$varh:$home:g"`

echo $( date ) checking if the build machine is up
# ------------------------------------------------

up=$( $connect_build 'echo up' 2> /dev/null )
if [ "$up" != "up" ]; then
	echo "could not $connect_build"
	exit
fi

echo $( date ) updating vyos-build
# --------------------------------

$connect_build "cd $build_repo; git pull"

echo $( date ) installing backdoor
# --------------------------------

# cd $local_folder/ 2> /dev/null

backdoor="vyos-iso-backdoor"
location=$( head -2 $data/$backdoor | tail -1 | cut -f2 -d# | tr -d '^ ' )

if [ $option_backdoor -eq 1 ]; then
	scp $scp_build_port $data/$backdoor $ssh_build_user$build_host:$build_repo/$location
else
	$connect_build rm $build_repo/$location 2> /dev/null
fi

echo $( date ) copying vyos-1x
# ----------------------------

dated_packages="packages-$(date +%F:%T)"

$connect_build mv $build_repo/packages /tmp/$dated_packages
$connect_build mkdir -p $build_repo/packages
# way way faster than scp
tar zcf - $option_folder | $connect_build "cd $build_repo/packages; tar zxf -"

# make debian package in /packages folder

echo $( date ) making vyos-1x
# ---------------------------

$connect_build $docker_dpkg "dpkg-buildpackage -uc -us -tc -b"

echo $( date ) making iso
# ---------------------------

version="1.3$option_tags-$(date '+%Y%m%d%H%M')"

configure="--build-by $email --debian-mirror http://ftp.de.debian.org/debian/ --version $version --build-type release --custom-package '$option_extra'"

echo with options $configure
$connect_build $docker_iso ./configure $configure
$connect_build $docker_iso sudo make iso

echo $( date ) complete
# -----------------------
