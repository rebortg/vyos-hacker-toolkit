#!/bin/bash

# Get configuration

etc="$(cd "$(dirname "$0")"/../etc ; pwd)"
data="$(cd "$(dirname "$0")"/../data ; pwd)"
cd $etc; for name in `ls`; do declare config_$name=$( cat $name ); done; cd - > /dev/null

declare build_user=""
if [ "$config_build_user" != "" ]; then
	declare build_user=" $config_build_user@"
fi

declare build_port=""
if [ "$config_build_port" != "" ]; then
	declare build_port="-p $config_build_port"
fi

declare build_scp_port=""
if [ "$config_build_port" != "" ]; then
	declare build_scp_port="-P $config_build_port"
fi

connect_build="ssh $build_port $build_user$config_build_host"

# Check if remote router is up

up=$( $connect_build 'echo up' 2> /dev/null )
if [ "$up" != "up" ]; then
	echo "could not ssh$config_build_port $build_user$config_build_host"
	exit
fi

echo $( date ) building

# update vyos-build

cd $local_folder/ 2> /dev/null
$connect_build "cd $config_build_repo; git pull"

# backdoor option

backdoor="vyos-iso-backdoor"
location=$( head -2 $data/$backdoor | tail -1 | cut -f2 -d# | tr -d '^ ' )

if [ "$1" == "backdoor" ]; then
	scp $build_scp_port $data/$backdoor $build_user$config_build_host:$config_build_repo/$location
else
	$connect_build rm $config_build_repo/$location 2> /dev/null
fi

# copying packages



# run in docker 

tags=""
home='$HOME'
extra="mc vim git rsync"
version="1.3$tags-$(date '+%Y%m%d%H%M')"

configure="./configure --build-by $config_email --debian-mirror http://ftp.de.debian.org/debian/ --version $version --build-type release --custom-package '$extra'"

echo $( date ) making iso

docker="docker run --rm --privileged -v $home/$config_build_repo:$config_build_folder -w $config_build_folder vyos-builder"

$connect_build $docker $configure
$connect_build $docker sudo make iso

echo $( date ) complete
